@model IEnumerable<AboutYourHolidays.ViewModels.PostViewModels.PostDetailsModel>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Wszystkie wpisy</h2>
<div class="row">
    @*<div class="col-xs-6 col-lg-6" style="margin-bottom: 20px">
        <p>
            @Html.ActionLink("Dodaj wpis", "Create")
        </p>
    </div>*@
    <div class="col-xs-12 col-lg-12" style="margin-top: 20px; margin-bottom: 20px">
        <!--<form class="form-inline" action="@Url.Action("Index", "Post")">
    <div class="form-group mx-sm-3 mb-2">
        <label for="input2" class="sr-only">Szukaj</label>
        <input type="text" class="form-control extraButton" id="input2" placeholder="Wpisz szukaną frazę">
    </div>
    <button type="submit" id="searchButton" value="Index" class="btn mb-2">Szukaj</button>
    <!--<p><a class="btn btn-default" id="searchButton" href="" role="button">Szukaj2</a></p>
    </form>-->
        @using (Html.BeginForm("Index", "Post", FormMethod.Get, new { @class = "form-inline" }))
        {
            <!--<div class="form-group mx-sm-3 mb-2">
            <div class="extraButton">


                <span class="bottom"></span>
                <span class="right"></span>
                <span class="top"></span>
                <span class="left"></span>
            </div>
        </div>-->
            @Html.TextBox("text", null, htmlAttributes: new { @class = " form-control" })
            <input type="submit" value="Szukaj" class="btn btn-default" />
        }
    </div>
    </div>
        <div class="row">
            @foreach (var item in Model)
            {

                <div class="col-xs-6 col-lg-6" style="margin-bottom: 20px">
                    <h2>@Html.DisplayFor(modelItem => item.Tilte)</h2>
                    <img src="@Url.Content("~/Uploads/" + "santi.png")" />
                </div><!--/.col-xs-6.col-lg-6-->
            <div class="col-xs-6 col-lg-6" style="padding-top: 60px; margin-bottom: 20px">
                <p style="text-overflow: ellipsis;">@Html.DisplayFor(modelItem => item.Description)  Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p>
                <p><a class="btn btn-default" href="@Url.Action("Details", "Post", new { id = item.Id })" role="button">View details &raquo;</a></p>
            </div><!--/.col-xs-6.col-lg-6-->

        }
        </div><!--/row-->
    @*
            <table class="table">
                <tr>
                    @*<th>
                        @Html.DisplayNameFor(model => model.User.Email)
                    </th>@
        <th>
            @Html.DisplayNameFor(model => model.Tilte)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Country)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.City)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ImageUrl)
        </th>
        @*<th>
                @Html.DisplayNameFor(model => model.CreatedOn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastUpdatedOn)
            </th>@
        <th></th>
            </tr>

        @foreach (var item in Model)
        {
            <tr>
                @*<td>
                        @Html.DisplayFor(modelItem => item.User.Email)
                    </td>@
                <td>
                    @Html.DisplayFor(modelItem => item.Tilte)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Country)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.City)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ImageUrl)
                </td>
                @*<td>
                        @Html.DisplayFor(modelItem => item.CreatedOn)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastUpdatedOn)
                    </td>@
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

        </table>*@
